name: Test and Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_ENGINE: django.db.backends.mysql
      DB_NAME: gntf_test
      DB_HOST: localhost
      DB_USER: root
      DB_PASSWORD: root
      AWS_REGION: us-east-1
      ECS_CLUSTER: gntf_cluster
      CONTAINER_NAME: gntf_app
      ECS_SERVICE: gntf_service
      ECS_TD: .github/workflows/td.json
      ALLOWED_HOSTS: '127.0.0.1,localhost'
      CORS_ALLOWED_ORIGINS: 'http://localhost:3000,http://127.0.0.1:3000'

    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Set up MySQL
        run: |
          sudo systemctl start mysql
          mysql -e 'CREATE DATABASE gntf_test;' -uroot -proot
          mysql -e 'SHOW DATABASES;' -uroot -proot

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pipenv

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Run Migrations
        run: pipenv run python manage.py migrate

      - name: Run Tests
        run: |
          pipenv run pytest
